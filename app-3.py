# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PC9DtgvoK33pzmgAYtKMbqcmU9u6ZcRU
"""

!pip install streamlit

import streamlit as st
import pandas as pd
import numpy as np
import joblib
import matplotlib.pyplot as plt

# Load data and model
df = pd.read_csv("train_data.csv")  # Preprocessed data
model = joblib.load("delay_predictor.pkl")  # Trained RandomForest model

# Title and intro
st.title("üö¶ Indian Railway Delay Predictor & Ripple Forecasting")
st.markdown("""
This app predicts train delays at the next station and identifies how delays ripple across trains.
""")

st.header("üìà Predict Delay at Next Station")

# Input features
train_id = st.selectbox("Select Train ID", df['train_id'].unique())
station_order = st.number_input("Current Station Order", min_value=1)
prev_delay = st.number_input("Previous Delay (in minutes)", min_value=0)
delay_arrival = st.number_input("Current Delay (in minutes)", min_value=0)

# Encode station and train
station_code = st.selectbox("Current Station Code", df[df['train_id'] == train_id]['station_code'].unique())
station_code_enc = df[df['station_code'] == station_code]['station_code_enc'].values[0]
train_id_enc = df[df['train_id'] == train_id]['train_id_enc'].values[0]

# Predict delay
if st.button("üöÇ Predict Next Station Delay"):
    input_vec = [[station_order, prev_delay, delay_arrival, station_code_enc, train_id_enc]]
    pred = model.predict(input_vec)[0]
    st.success(f"Predicted Delay at Next Station: **{int(pred)} minutes**")

# Optional: Visuals
st.header("üìä Visual Insights")

if st.checkbox("Show Top 10 Delayed Stations"):
    station_delay = df.groupby('station_code')['delay_arrival'].mean().sort_values(ascending=False).head(10)
    st.bar_chart(station_delay)

if st.checkbox("Show Most Disruptive Trains"):
    ripple_df = pd.read_csv("ripple_pairs.csv")  # Created from Step 4
    ripple_causes = ripple_df.groupby('lead_train')['target_train'].count().sort_values(ascending=False).head(10)
    st.bar_chart(ripple_causes)

st.caption("Made with ‚ù§Ô∏è for Datathon")

